#!/bin/bash
# SPDX-License-Identifier: LGPL-2.1-or-later

set -e

OPT_REMOTE=
OPT_LINK=
OPT_SIGN=
OPT_EDIT=--no-edit

usage() {
	echo "
Usage: $(basename $0) [OPTIONS] <PR> [trailers ...]
Fetch a pull-request from github

OPTIONS
    -l          Add link to the PR in the commit message using applypr.link-base from config
    -s		Add Signed-off-by by the current user
    -e		Edit commit message
    -r <remote> Use <remote>, otherwise uses fetchpr.remote from config
" 1>&$1;
	exit $(($1 - 1));
}

setup_link_base() {
	OPT_LINK=$(git config get  --default="" applypr.link-base)
	if [ -z "$OPT_LINK" ]; then
		echo "Option -l requires applypr.link-base from config" >&2
		usage 2
	fi
	# remove trailing / if it exists
	OPT_LINK="${OPT_LINK%/}"
}

setup_sign() {
	OPT_SIGN="Signed-off-by: $(git config --get user.name) <$(git config --get user.email)>"
}

setup_remote() {
	if [[ -n "$1" ]]; then
		OPT_REMOTE=$1
	else
		OPT_REMOTE="$(git config get fetchpr.remote)"
	fi
}

setup_edit() {
	OPT_EDIT=--edit
}

args=0
while getopts "lsr:h" o; do
	case "${o}" in
		l) setup_link_base; args=$[$args + 1];;
		s) setup_sign; args=$[$args + 1];;
		r) setup_remote $OPTARG; args=$[$args + 2] ;;
		e) setup_edit; args=$[$args + 1];;
		h) usage 1;;
		\?) usage 2;;
	esac
done
shift $args

setup_remote
branch=$(git rev-parse --abbrev-ref HEAD)
pr=$1
shift

trailers=()
trailers+=("$@")
if [[ -n "$OPT_LINK" ]]; then
	trailers+=("Link: $OPT_LINK/pull/$pr")
fi
if [[ -n "$OPT_SIGN" ]]; then
	trailers+=("$OPT_SIGN")
fi	
args=("${trailers[@]/#/--trailer \'}")
args=("${args[@]/%/\'}")

git fetchpr -r $OPT_REMOTE $pr
git rebase -x "git -c trailer.where=end -c trailer.if-exists=addIfDifferent commit --amend $OPT_EDIT ${args[*]}" --onto HEAD HEAD FETCH_HEAD
if [[ "$branch" != "HEAD" ]]; then
	git checkout -B $branch HEAD
fi
