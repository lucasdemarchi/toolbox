#!/bin/bash

set -ex

FILE=
KVER=
HAVE_MODULES=
SCRIPT=$(realpath ${BASH_SOURCE[0]})

if [ $# -gt 0 ]; then
    FILE=$1
    KVER=$(basename $FILE)
    KVER=${KVER/linux-}
    KVER=${KVER//.tar.xz}
    HAVE_MODULES=$(tar -tf $FILE usr/lib/modules/$KVER | head -n 1)
else
    FILE=$SCRIPT
    KVER=$(basename $FILE)
    KVER=${KVER/linux-}
    KVER=${KVER//.sh}

    # check if we have embedded custom kernel
    if grep -e "^__CUSTOM_KERNEL_BELLOW__" ${SCRIPT}; then
	HAVE_MODULES=$(sed -e '1,/^__CUSTOM_KERNEL_BELLOW__/d' ${SCRIPT} | \
		tar -tJ usr/lib/modules/$KVER | head -n 1)
    fi
fi

# sanity check if file has that module directory
if [ -z "$HAVE_MODULES" ]; then
    echo "wrong file name or kernel doesn't have any modules directory" >&2
    exit 1
fi

# remove previous modules
rm -rf /usr/lib/modules/$KVER

# install kernel and modules on /usr/lib
if [[ !  "$FILE" = "$SCRIPT" ]]; then
    tar -C / -mxJf $FILE
else
    sed -e '1,/^__CUSTOM_KERNEL_BELLOW__/d' ${SCRIPT} | \
            tar -C / -mxJ
fi

# target didn't adhere to the /usr move
if [ "$(realpath /lib/modules)" != "/usr/lib/modules" ]; then
    rm -rf /lib/modules/$KVER
    mv /usr/lib/modules/$KVER /lib/modules/$KVER
fi

# copy kernel to boot partition, install bootloader entry and possibly
# generate an initrd

if [ ! -z "$(which kernel-install)" ]; then
    kernel-install add $KVER /usr/lib/custom-kernel/vmlinuz
else
    echo "Just going to install the kernel, bootloader config is on you"
    cp /usr/lib/custom-kernel/vmlinuz /boot/${2:-vmlinuz-test}
fi
