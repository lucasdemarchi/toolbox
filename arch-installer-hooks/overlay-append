#!/bin/bash

# Usage: overlay-append <path>...
#
# Each <path> might be a path to a directory or a tarball. The content of each
# file recursively found inside each <path> is appended to the corresponding
# file under ROOTFS. If the file doesn't exist in ROOTFS, a new file is
# created. All sub-directories in the path to the file are created if they
# don't exist.

append() {
    local f="$1"
    local target="$ROOTFS/$f"

    if [[ -d "$target" ]]; then
        echo "overlay-append: $target is a directory, skipping..." >&2
        return 1
    fi

    if ! mkdir -p $(dirname $target); then
        echo "overlay-append: couldn't create directory for "$target", skipping..." >&2
        return 1
    fi

    cat >> "$target"
}

while [[ -n $1 ]]; do
    f=$1
    if [[ -d $f ]]; then
        d=$f
        find $f -type f | while read f; do
            target=$(realpath "$f" --relative-to "$d")
            cat "$f" | append $target
            true
        done || echo "overlay-append: unable to read directory \"$d\", ignoring..." >&2
    elif [[ -f $f ]]; then
        # if not a directory, it must be a tarball
        tarball="$f"
        tar tf $f | grep -v [/]$ | while read f; do
            target=${f#./} # avoid error due to leading "./"
            tar xf "$tarball" -O $f | append $target
            true
        done || echo "overlay-append: unable to open tarball \"$f\", ignoring..." >&2
    else
        echo "overlay-append: argument \"$f\" is not a file or directory, ignoring..." >&2
    fi
    shift
done
