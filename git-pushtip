#!/bin/bash

SCRIPT_DIR=$(dirname $(realpath ${BASH_SOURCE[0]}))

usage() {
    echo "
Usage: $(basename $0) [OPTIONS] [BRANCH]
Send a branch for review in tip/ or wip/ namespaces.

OPTIONS
    -w             consider this a WIP. The branch prefix will be wip/
    -v [<version>] add the suffix \"-v<version>\" to indicate a different
                   branch version. To stop using version suffix, pass this
                   option without argument.
    -h             display this help message

All the unknown options are passed directly to the git-push command.
" 1>&2;
    exit 1;
}

. $SCRIPT_DIR/uri_parser.sh
. $SCRIPT_DIR/tip_config.sh

OPT_WIP=0
pushargs=""
args=
version=
has_version_arg=false
while [ -n "$1" ]; do
    arg=$1
    case "$arg" in
        -w) OPT_WIP=1
            ;;
        -v) shift
            version=$1
            has_version_arg=true
            ;;
        -h) usage
            ;;
        # unknown options go to arguments to git-push
        -*) pushargs="$pushargs $arg"
            ;;
        *) args="$args $arg"
            ;;
    esac
    shift
done
IFS=' ' read -a args <<< "$args"

TIP=${args[0]:-HEAD}
BRANCH=$(basename $(git rev-parse --abbrev-ref --symbolic $TIP))
if [ -z "$BRANCH" ]; then
    die "No branch matches '$TIP'"
fi

[ $OPT_WIP -eq 1 ] && branchprefix=${branchprefix/tip/wip}
echo " Using $remote/$branchprefix as namespace"

oldversion=$(git config --get pushtip.branch.$BRANCH.version 2>/dev/null)
if [ -n "$version" ]; then
    [ "$version" != "$oldversion" ] && git config \
                pushtip.branch.$BRANCH.version $version
elif $has_version_arg; then
    echo " Not using version suffix anymore"
    git config --unset-all pushtip.branch.$BRANCH.version
else
    version=$oldversion
fi

if [ -n "$version" ]; then
    branchsuffix=-v$version
    echo " Pushing version $version"
fi

remote_branch=$branchprefix/$BRANCH$branchsuffix

git push --set-upstream $pushargs $remote $TIP:$remote_branch
